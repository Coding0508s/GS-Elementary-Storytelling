# ========================================
# Speak and Shine 2025 Nginx 설정
# ========================================

server {
    listen 80;
    server_name your-domain.com www.your-domain.com;
    
    # HTTP에서 HTTPS로 리다이렉트
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL 인증서 설정
    ssl_certificate /path/to/your/certificate.crt;
    ssl_certificate_key /path/to/your/private.key;
    
    # SSL 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 보안 헤더
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # 문서 루트
    root /var/www/storytelling/public;
    index index.php index.html index.htm;
    
    # 일반 로그
    access_log /var/log/nginx/storytelling_access.log;
    error_log /var/log/nginx/storytelling_error.log;
    
    # 클라이언트 최대 본문 크기 (2GB 업로드 지원)
    client_max_body_size 2048M;
    
    # 타임아웃 설정 (대용량 파일 업로드용)
    client_body_timeout 300s;
    client_header_timeout 300s;
    keepalive_timeout 300s;
    send_timeout 300s;
    
    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # 정적 파일 캐싱
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # 비디오 파일 전용 설정
    location ~* \.(mp4|webm|ogg|avi|mov)$ {
        expires 1y;
        add_header Cache-Control "public";
        
        # 스트리밍을 위한 범위 요청 지원
        add_header Accept-Ranges bytes;
        
        # 대용량 파일을 위한 버퍼 설정
        proxy_buffering off;
        tcp_nopush on;
        tcp_nodelay on;
        
        try_files $uri =404;
    }
    
    # Laravel 애플리케이션 라우팅
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHP 처리
    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock; # PHP 버전에 맞게 조정
        fastcgi_index index.php;
        
        # PHP 설정
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        
        # 대용량 파일 업로드를 위한 설정
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        
        include fastcgi_params;
    }
    
    # 민감한 파일/디렉토리 접근 차단
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(storage|bootstrap/cache)/ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /\.(env|git|svn) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Laravel 특정 파일 차단
    location ~ /(artisan|composer\.(json|lock)|package\.(json|lock)|webpack\.mix\.js)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }
    
    # favicon.ico
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
}

# 추가 보안을 위한 서버 블록 (다른 도메인 차단)
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    server_name _;
    
    # 기본 SSL 인증서 (자체 서명)
    ssl_certificate /etc/ssl/certs/default.crt;
    ssl_certificate_key /etc/ssl/private/default.key;
    
    return 444; # 연결 종료
}
